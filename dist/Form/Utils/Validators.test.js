import{checkFieldsType,checkFieldsRow,equalTo,required}from"./Validators";it("Invalid type at the schema",function(){expect(function(){return checkFieldsType({fields:{name:{row:1,label:"Nome",type:"",placeholder:"Write your name...",helper:"Helper text with details..."}}})}).toThrow()}),it("Valid type at the schema",function(){expect(checkFieldsType({fields:{name:{row:1,label:"Nome",type:"string",placeholder:"Write your name...",helper:"Helper text with details..."}}})).toEqual(!0)}),it("Invalid row at the schema",function(){expect(function(){return checkFieldsRow({rows:1,fields:{name:{row:2}}})}).toThrow()}),it("Valid row at the schema",function(){expect(checkFieldsRow({rows:2,fields:{name:{row:2}}})).toEqual(!0)}),it("Validator function equalTo true",function(){var a=equalTo("",!0);expect(a.run(!0)).toEqual(!0)}),it("Validator function equalTo false",function(){var a=equalTo("",!1);expect(a.run(!0)).toEqual(!1)}),it("Validator function required when field don\xB4t has value",function(){var a=required("");expect(a.run("")).toEqual(!1)}),it("Validator function required when field has value",function(){var a=required("");expect(a.run("Value")).toEqual(!0)}),it("Validator function required when field has value",function(){var a=required("");expect(a.run(0)).toEqual(!0)}),it("Validator function required when field has value",function(){var a=required("");expect(a.run(!1)).toEqual(!0)});