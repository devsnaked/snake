import{types}from"./../Fields";function checkFieldsType(a){for(var b,c=a.fields,d=types(),e=0,f=Object.values(c);e<f.length;e++)if(b=f[e],!d.includes(b.type))throw new Error("Invalid type at the field ".concat(JSON.stringify(b)));return!0}function checkFieldsRow(a){for(var b,c=a.fields,d=a.rows,e=0,f=Object.values(c);e<f.length;e++)if(b=f[e],b.row>d)throw new Error("Invalid row at the field ".concat(JSON.stringify(b)));return!0}function required(a){return{message:a,run:function run(a){return""!==a&&null!==a&&a!==void 0&&0!==a.length}}}function dynamic(a,b){return{message:a,run:function run(a,c){return b(a,c)}}}function equalTo(a,b){return{message:a,run:function run(a){return b===a}}}function min(a,b){return{message:a,run:function run(a){return a>=b}}}function max(a,b){return{message:a,run:function run(a){return a<=b}}}function schemaValidator(a){return[checkFieldsType,checkFieldsRow].every(function(b){return b(a)})}export{schemaValidator,checkFieldsType,checkFieldsRow,required,dynamic,equalTo,max,min};